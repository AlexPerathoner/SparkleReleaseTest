name: "Create Draft Release"

on:
  issue_comment:
    types: [created]
  pull_request:
    branches: ["master"]
    # types: [closed]

concurrency:
  group: publish-release${{ github.ref }}
  cancel-in-progress: true

env:
  projname: testSparkleRelease

jobs:
  release:
    name: "Publish binaries for release"
    runs-on: macos-12
    environment: deploy-release

    steps:
      - name: "Check if comment is /release"
        if: github.event.issue.pull_request && contains(github.event.comment.body, '/release') && github.event.comment.author_association == 'OWNER'
        run: |
          echo "Comment is /release"
          echo "RELEASE=true" >> $GITHUB_ENV
      - name: "Checkout sources"
        uses: actions/checkout@v3
      - name: Extract latest changes
        id: latest_changes
        run: |
          python3 ./Configuration/generate_latest_changes.py
          echo "{new_version}=$(cat new_version)" >> $GITHUB_STATE
          echo "{title}=$(cat title)" >> $GITHUB_STATE
      - name: "Overwrite project versions in project"
        run: |
          xcrun agvtool new-marketing-version ${{ steps.latest_changes.outputs.new_version }}
          xcrun agvtool new-version ${{ steps.latest_changes.outputs.new_version }}
      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      - name: Switch Xcode version
        run: sudo xcode-select -s "/Applications/Xcode_14.2.app"
      - name: Xcode version
        run: /usr/bin/xcodebuild -version
      - name: Build and archive
        run: xcodebuild clean archive -project ${{ env.projname }}.xcodeproj -scheme ${{ env.projname }} -archivePath ${{ env.projname }}
      - name: Export app
        run: xcodebuild -exportArchive -archivePath "${{ env.projname }}.xcarchive" -exportPath Release -exportOptionsPlist "Configuration/ExportOptions.plist"
      - name: Zip app
        run: zip -r -y Release/${{ env.projname }}.zip Release/${{ env.projname }}.app
      - name: "Draft a release"
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ steps.latest_changes.outputs.title }}
          tag_name: ${{ steps.latest_changes.outputs.new_version }}
          fail_on_unmatched_files: true
          body_path: latest_changes
          files: |
            Release/${{ env.projname }}.zip
      - name: Cleanup
        run: |
          rm -rf Release
          rm -rf ${{ env.projname }}.xcarchive
          rm -rf ${{ env.projname }}.zip
          rm -rf latest_changes
          rm -rf new_version
          rm -rf title
      - name: Saving changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Update version to ${{ steps.latest_changes.outputs.new_version }}"

